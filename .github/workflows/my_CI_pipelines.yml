name: Continuous Integration Dockerized Tests

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - '**/*.md'  # Ignore changes to Markdown files
  pull_request:
    paths-ignore:
      - '**/*.md'  # Ignore changes to Markdown files

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      docker:
        image: docker:latest
        ports:
          - 2375:2375

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build Docker Image for Tests
        run: docker build --target test --tag my-test-image .

      - name: Run Unit and Integration Tests
        run: docker run my-test-image

  security_check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build Docker Image for Dependency Check
        run: docker build --target securityscan --tag todo-app:security .
      
      - name: Run Security checks
        run:  docker run todo-app:security    
        continue-on-error: true  # Allows the step to pass even if there are vulnerabilities

  publish:
    name: Publish Docker Image
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build --target production --tag ${{ secrets.DOCKER_USERNAME }}/my-image:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-image:latest
      
      - name: Get webhook url and run curl command
        run: |
          curl -dH --fail -X POST "${{ secrets.WEBHOOK_URL }}"

  terraform_init:
    name: Terraform Setup, Init and Deploy
    runs-on: ubuntu-latest
    needs: [build, security_check]  # Wait for previous jobs to complete
        
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Log in to Azure using Service principal
        shell: pwsh
        env:
          SPN_ID: ${{ secrets.ARM_CLIENT_ID }}
          SPN_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          SPN_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          SPN_SUBSCRIPTION: ${{ secrets.ARM_SUBSCRIPTION_ID }}  
        run: |
          az login --service-principal -u $env:SPN_ID -p $env:SPN_SECRET --tenant $env:SPN_TENANT_ID
          az account set --subscription $env:SPN_SUBSCRIPTION
          terraform init        

      - name: Terraform Apply
        run: terraform apply -auto-approve $env:SPN_ID $env:SPN_SECRET $env:SPN_TENANT_ID $env:SPN_SUBSCRIPTION
            
      - name: Get Webhook URL from Terraform Output
        id: get_webhook_url
        run: echo "::set-output name=webhook_url::$(terraform output -raw cd_webhook)"
    
      - name: Trigger Deployment via Webhook
        run: |
          curl -dH -X POST "${{ steps.get_webhook_url.outputs.webhook_url }}"
